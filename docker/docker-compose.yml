version: '3.8'
networks:
  net:
    name: ${COMPOSE_PROJECT_NAME}_net
    driver: bridge

services:
  api:
    extends:
      file: base-docker-compose.yml
      service: api
    volumes:
      - ../:/app
    ports:
      - ${COMPOSE_API_PORT}:3000
      - ${COMPOSE_API_DEBUG_PORT}:9229
      - ${COMPOSE_API_DEBUG_TESTS_PORT}:9230
    command: >
      bash -c "npm ci
      && rm -rf dist
      && npm run start:debug"

  worker:
    extends:
      file: base-docker-compose.yml
      service: worker
    volumes:
      - ../:/app
    ports:
      - ${COMPOSE_WORKER_DEBUG_PORT}:9231
    command: >
      bash -c "npm run start:worker:debug"
    environment:
      NODE_DEBUG: bull

  db:
    extends:
      file: base-docker-compose.yml
      service: db
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${COMPOSE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${COMPOSE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${COMPOSE_POSTGRES_DB}
    ports:
      - ${COMPOSE_POSTGRES_PORT}:5432
      
  
  db_test:
    extends:
      file: base-docker-compose.yml
      service: db
    container_name: ${COMPOSE_PROJECT_NAME}_db_test      
    volumes:
      - ./postgres/data_tests:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${COMPOSE_DB_USERNAME_TEST}
      POSTGRES_PASSWORD: ${COMPOSE_DB_PASSWORD_TEST}
      POSTGRES_DB: ${COMPOSE_DB_DATABASE_TEST}
    ports:
      - ${COMPOSE_DB_PORT_TEST}:5432

  redis:
    extends:
      file: base-docker-compose.yml
      service: redis
    volumes:
      - ./redis/data:/data
    
  maildev:
    networks:
      - net    
    image: maildev/maildev
    ports:
      - 1080:1080
